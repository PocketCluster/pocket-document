# --- Re-direction ---

## Redirect all non-encrypted to encrypted
server {
    server_name                index.pocketcluster.io;
    listen                     *:80;
    #listen                    [::]:80;

    return 301 https://index.pocketcluster.io$request_uri;
}

# --- Main Service ---- #

# GOLANG-GOJI SERVER
upstream go_http {
    server 127.0.0.1:8000;
    keepalive 300;
}

# HTTPS server
server {
    # https://serverfault.com/questions/660243/nginx-how-to-set-limit-conn-and-limit-req
    # zone which we want to limit by upper values, we want limit whole server
    limit_req                 zone=req_limit_per_ip burst=10 nodelay;
    limit_conn                conn_limit_per_ip 20;

    server_name               index.pocketcluster.io;
    listen                    *:443 ssl http2;
    #listen                   [::]:443 ssl http2;

    # HTTP Strict Transport Security (31536000 seconds = 1 year)
    # https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
    # https://www.troyhunt.com/understanding-http-strict-transport/
    add_header                Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # config to don't allow the browser to render the page inside an frame or iframe
    add_header                X-Frame-Options DENY;

    # disable content-type sniffing on some browsers.
    add_header                X-Content-Type-Options nosniff;

    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    add_header                X-XSS-Protection "1; mode=block";

    # tell the browser that it can only download content from the domains you explicitly allow
    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

    # SSL configurations
    ssl                       on;
    ssl_protocols             TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_session_tickets       off;
    ssl_certificate           /etc/letsencrypt/live/pocketcluster.io/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/pocketcluster.io/privkey.pem;

    # enable session resumption to improve https performance
    # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
    ssl_session_cache         shared:SSL:50m;
    ssl_session_timeout       5m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam               /etc/nginx/ssl.crt/dhparams.pem;

    # Enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
    # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    ssl_stapling              on;
    ssl_stapling_verify       on;
    ssl_trusted_certificate   /etc/letsencrypt/live/pocketcluster.io/fullchain.pem;
    resolver                  8.8.8.8 8.8.4.4;

    location /robot.txt {
        root      /www-static;
        try_files $uri $uri/ =404;
    }

    location /theme {
        root      /www-static;
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        autoindex on;
        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
    }

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ipcountry $http_cf_ipcountry;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header Cf-Visitor $http_cf_visitor;

        # keepalive setting
        proxy_pass http://go_http;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}

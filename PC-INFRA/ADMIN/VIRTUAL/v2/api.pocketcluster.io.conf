upstream api_service {
    server 127.0.0.1:8080;
    keepalive 300;
}

server {

    server_name         api.pocketcluster.io;
    listen              *:443 ssl http2;
    #listen             [::]:443 ssl http2;

    # https://serverfault.com/questions/660243/nginx-how-to-set-limit-conn-and-limit-req
    # zone which we want to limit by upper values, we want limit whole server
    limit_req           zone=req_limit_per_ip burst=10 nodelay;
    limit_conn          conn_limit_per_ip 20;

    location ^~ /service/ {

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ipcountry $http_cf_ipcountry;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header Cf-Visitor $http_cf_visitor;

        # to upstream proxy
        proxy_pass http://api_service;

        # for http keep alive (http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive)
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    location ^~ /healthcheck {

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ipcountry $http_cf_ipcountry;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header Cf-Visitor $http_cf_visitor;

        # to upstream proxy
        proxy_pass http://api_service;

        # for http keep alive (http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive)
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    location / {
        return 404;
    }
}
